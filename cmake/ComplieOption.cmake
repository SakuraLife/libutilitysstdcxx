include(CheckCXXCompilerFlag)
include(CheckTypeSize)
include(CheckVariableExists)

macro(mangle_name str output)
string(STRIP "${str}" strippedStr)
string(REGEX REPLACE "^/" "" strippedStr "${strippedStr}")
string(REGEX REPLACE "^-+" "" strippedStr "${strippedStr}")
string(REGEX REPLACE "-+$" "" strippedStr "${strippedStr}")
string(REPLACE "-" "_" strippedStr "${strippedStr}")
string(REPLACE "=" "_EQ_" strippedStr "${strippedStr}")
string(REPLACE "+" "X" strippedStr "${strippedStr}")
string(TOUPPER "${strippedStr}" ${output})
endmacro()

macro(add_compile_flags)
  foreach(f ${ARGN})
    list(APPEND CXX_COMPILE_FLAGS ${f})
  endforeach()
endmacro()

macro(add_compile_flags_if condition)
  if (${condition})
    add_compile_flags(${ARGN})
  endif()
endmacro()

macro(add_compile_flags_if_supported)
  foreach(flag ${ARGN})
      mangle_name("${flag}" flagname)
      check_cxx_compiler_flag("${flag}" "CXX_SUPPORTS_${flagname}_FLAG")
      add_compile_flags_if(CXX_SUPPORTS_${flagname}_FLAG ${flag})
  endforeach()
endmacro()

function(JOIN VALUES GLUE OUTPUT)
  string (REPLACE ";" "${GLUE}" _TMP_STR "${VALUES}")
  set (${OUTPUT} "${_TMP_STR}" PARENT_SCOPE)
endfunction()

macro(type_size)
  check_type_size(char            CXX_CHAR)
  check_type_size(short           CXX_SHORT)
  check_type_size(int             CXX_INT)
  check_type_size(long            CXX_LONG)
  check_type_size("long long"     CXX_LLONG)
  check_type_size(float           CXX_FLOAT)
  check_type_size(double          CXX_DOUBLE)
  check_type_size("long double"   CXX_LDOUBE)
  check_type_size("void*"         CXX_PTR)

  if(${CXX_IS_64BITS})
    set(CXX_BIT "64")
    set(CXX_SYSTEM_BITS "64")
  else(${CXX_IS_64BITS})
    set(CXX_BIT "32")
    set(CXX_SYSTEM_BITS "32")
  endif(${CXX_IS_64BITS})

  # check_type_size(int8_t          CXX_INT8_T)
  # check_type_size(uint8_t         CXX_UINT8_T)
  # check_type_size(int_least8_t    CXX_INT_LEAST8_T)
  # check_type_size(uint_least8_t   CXX_UINT_LEAST8_T)
  # check_type_size(int_fast8_t     CXX_INT_FAST8_T)
  # check_type_size(uint_fast8_t    CXX_UINT_FAST8_T)
  # check_type_size(int16_t         CXX_INT16_T)
  # check_type_size(uint16_t        CXX_UINT16_T)
  # check_type_size(int_least16_t   CXX_INT_LEAST16_T)
  # check_type_size(uint_least16_t  CXX_UINT_LEAST16_T)
  # check_type_size(int_fast16_t    CXX_INT_FAST16_T)
  # check_type_size(uint_fast16_t   CXX_UINT_FAST16_T)
  # check_type_size(int32_t         CXX_INT32_T)
  # check_type_size(uint32_t        CXX_UINT32_T)
  # check_type_size(int_least32_t   CXX_INT_LEAST32_T)
  # check_type_size(uint_least32_t  CXX_UINT_LEAST32_T)
  # check_type_size(int_fast32_t    CXX_INT_FAST32_T)
  # check_type_size(uint_fast32_t   CXX_UINT_FAST32_T)
  # check_type_size(int64_t         CXX_INT64_T)
  # check_type_size(uint64_t        CXX_UINT64_T)
  # check_type_size(int_least64_t   CXX_INT_LEAST64_T)
  # check_type_size(uint_least64_t  CXX_UINT_LEAST64_T)
  # check_type_size(int_fast64_t    CXX_INT_FAST64_T)
  # check_type_size(uint_fast64_t   CXX_UINT_FAST64_T)
endmacro()
